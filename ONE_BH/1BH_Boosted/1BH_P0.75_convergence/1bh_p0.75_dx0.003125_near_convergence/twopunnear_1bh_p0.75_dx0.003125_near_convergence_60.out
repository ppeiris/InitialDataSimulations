--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.3.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.3.0
Compile date:      Jul 06 2016 (04:25:41)
Run date:          Aug 15 2016 (02:33:04+0000)
Run host:          127.0.0.1ip-172-30-0-219 (pid=4827)
Working directory: /home/admin/simulations/ONE_BH/1BH_Boosted/1BH_P0.75_convergence/1bh_p0.75_dx0.003125_near_convergence
Executable:        /home/admin/bbhcode
Parameter file:    /home/admin/simulations/ONE_BH/1BH_Boosted/1BH_P0.75_convergence/1bh_p0.75_dx0.003125_near_convergence/twopunnear_1bh_p0.75_dx0.003125_near_convergence_60.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Time MoL cartgrid3d IOUtil Carpet CarpetLib CarpetInterp CarpetReduce CarpetSlab ADMBase ADMCoupling ADMMacros CoordBase CoordGauge SpaceMask StaticConformal TmunuBase LoopControl Boundary SymBase InitBase Slab LocalInterp GenericFD AEILocalInterp ML_BSSN ML_BSSN_Helper ADMConstraints Fortran GSL TwoPunctures NaNChecker CarpetIOBasic CarpetIOScalar CarpetIOASCII TimerReport <---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn LoopControl requests automatic activation of hwloc
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMConstraints...Success -> active implementation admconstraints
Activating thorn ADMCoupling...Success -> active implementation ADMCoupling
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetSlab...Success -> active implementation Hyperslab
Activating thorn cartgrid3d...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn GSL...Success -> active implementation GSL
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn Slab...Success -> active implementation Slab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TwoPunctures...Success -> active implementation TwoPunctures
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::lc_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      IOUtil::IOUtil_Startup: Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      Slab::Slab_InitMPIDatatypes: Create MPI datatypes for complex variables in C
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      ADMConstraints::ADMConstraint_InitSymBound: [global] Register GF symmetries for ADM Constraints
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      Slab::Slab_InitTimers: Initialise timers
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      ADMConstraints::ADMConstraints_ParamCheck: [global] Check that we can deal with this metric_type
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TwoPunctures::TwoPunctures_ParamCheck: Check parameters and thorn needs
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          GROUP TwoPunctures_Group: TwoPunctures initial data group
            TwoPunctures::TwoPunctures: Create puncture black hole initial data
            TwoPunctures::TwoPunctures_Metadata: [global] Output TwoPunctures metadata
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
        GROUP SetTmunu: Calculate the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
        GROUP ADMConstraintsGroup: Evaluate ADM constraints, and perform symmetry boundary conditions
          ADMConstraints::ADMConstraints: Evaluate ADM constraints
          GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
            ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
            GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP ADMConstraintsGroup: Evaluate ADM constraints, and perform symmetry boundary conditions
          ADMConstraints::ADMConstraints: Evaluate ADM constraints
          GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
            ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
            GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
        ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
        GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::lc_steer: [meta] Update LoopControl algorithm preferences
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 2 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP ADMConstraintsGroup: Evaluate ADM constraints, and perform symmetry boundary conditions
        ADMConstraints::ADMConstraints: Evaluate ADM constraints
        GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
          ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
          GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
      GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
        ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
        GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
  if (checkpoint)
    [CCTK_CHECKPOINT]
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
  endif
  if (analysis)
    [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables
  enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::lc_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP ADMConstraintsBoundariesGroup: Set ADM constraints on the boundary
        ADMConstraints::ADMConstraints_Boundaries: [level] Select boundary conditions for the ADM constraints
        GROUP ADMConstraints_ApplyBCs: Apply boundary conditions to the ADM constraints
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   process 0: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
Current core file size limit: hard=[unlimited], soft=0 MB
Current memory size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via gettimeofday...
INFO (CycleClock): Calibrated CycleClock: 0.416745 ns per clock tick (2.39955 GHz)
INFO (Vectors): Using vector size 1 for architecture scalar (no vectorisation, 64-bit precision)
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 1 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is disabled
INFO (Carpet): This process runs on host 127.0.0.1ip-172-30-0-219, pid=4827
INFO (Carpet): This process runs on 4 cores: 0-3
INFO (Carpet): Thread 0 runs on 4 cores: 0-3
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[1,1,1],[1,1,1]]
INFO (Carpet): Standard grid specification for map 0:
   number of grid points: [41,41,41]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [2,2,2] : [38,38,38]   ([36,36,36])
   interior extent: [3,3,3] : [37,37,37]   ([34,34,34])
   exterior extent: [0,0,0] : [40,40,40]   ([40,40,40])
   base_spacing   : [1,1,1]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [2,2,2] : [38,38,38]   ([36,36,36])
   interior extent   : [3,3,3] : [37,37,37]   ([34,34,34])
   exterior extent   : [0,0,0] : [40,40,40]   ([40,40,40])
   spacing           : [1,1,1]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [41,41,41]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 599 grid functions in 57 groups
INFO (Carpet):    There are 80 grid scalars in 30 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOScalar): Periodic scalar output requested for:
   ADMBASE::gxx
   ADMBASE::gxy
   ADMBASE::gxz
   ADMBASE::gyy
   ADMBASE::gyz
   ADMBASE::gzz
   ADMBASE::kxx
   ADMBASE::kxy
   ADMBASE::kxz
   ADMBASE::kyy
   ADMBASE::kyz
   ADMBASE::kzz
   ADMBASE::alp
   ADMBASE::betax
   ADMBASE::betay
   ADMBASE::betaz
   ADMBASE::dtalp
   ADMBASE::dtbetax
   ADMBASE::dtbetay
   ADMBASE::dtbetaz
   ADMCONSTRAINTS::ham
   ADMCONSTRAINTS::momx
   ADMCONSTRAINTS::momy
   ADMCONSTRAINTS::momz
   CARPETREDUCE::weight
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   ADMBASE::gxx
   ADMBASE::gxy
   ADMBASE::gxz
   ADMBASE::gyy
   AWARNING level 1 from host 127.0.0.1ip-172-30-0-219 process 0
  while executing schedule bin CCTK_WRAGH, routine ML_BSSN_Helper::ML_BSSN_ParamCompat
  in thorn ML_BSSN_Helper, file /home/admin/Cactus/configs/bbhcode/build/ML_BSSN_Helper/Parameters.c:98:
  -> Forcing ML_BSSN::evolveB=0 because ML_BSSN::shiftGammaCoeff=0.0
DMBASE::gyz
   ADMBASE::gzz
   ADMBASE::kxx
   ADMBASE::kxy
   ADMBASE::kxz
   ADMBASE::kyy
   ADMBASE::kyz
   ADMBASE::kzz
   ADMBASE::alp
   ADMBASE::betax
   ADMBASE::betay
   ADMBASE::betaz
   ADMBASE::dtalp
   ADMBASE::dtbetax
   ADMBASE::dtbetay
   ADMBASE::dtbetaz
   ADMCONSTRAINTS::ham
   ADMCONSTRAINTS::momx
   ADMCONSTRAINTS::momy
   ADMCONSTRAINTS::momz
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPETREDUCE::weight
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::gxx
   ADMBASE::gxy
   ADMBASE::gxz
   ADMBASE::gyy
   ADMBASE::gyz
   ADMBASE::gzz
   ADMBASE::kxx
   ADMBASE::kxy
   ADMBASE::kxz
   ADMBASE::kyy
   ADMBASE::kyz
   ADMBASE::kzz
   ADMBASE::alp
   ADMBASE::betax
   ADMBASE::betay
   ADMBASE::betaz
   ADMBASE::dtalp
   ADMBASE::dtbetax
   ADMBASE::dtbetay
   ADMBASE::dtbetaz
   ADMCONSTRAINTS::ham
   ADMCONSTRAINTS::momx
   ADMCONSTRAINTS::momy
   ADMCONSTRAINTS::momz
   CARPETREDUCE::weight
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 2 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 248. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 248. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 248. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 248. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 248. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 248. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 248. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 93/93 tests passed 
WARNING level 1 from host 127.0.0.1ip-172-30-0-219 process 0
  while executing schedule bin MaskBase_SetupMaskAll, routine CarpetReduce::MaskBase_TestMask
  in thorn CarpetReduce, file /home/admin/Cactus/configs/bbhcode/build/CarpetReduce/mask_test.c:137:
  -> Simulation domain volume and reduction weight sum differ
INFO (ADMMacros): Spatial finite differencing order: 4
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.5625000e-03  dy=>1.5625000e-03  dz=>1.5625000e-03
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[ 2.969, 3.031]  y=>[ 0.469, 0.531]  z=>[ 0.469, 0.531]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,40]  y=>[0,40]  z=>[0,40]
INFO (CarpetReduce): Simulation domain volume:  1
INFO (CarpetReduce): Additional excised volume: 0
INFO (CarpetReduce): Reduction weight sum:      46656
INFO (Time): Timestep set to 0.000390625 (courant_static)
INFO (TwoPunctures): Solving puncture equation for BH-BH system
INFO (TwoPunctures): b = 3
Newton: it=0 	 |F|=8.932683e-03
bare mass: mp=1 	 mm=1
bicgstab:  itmax 100, tol 8.932683e-06
bicgstab:     0   7.432e-01
bicgstab:     1   2.589e+00   2.244e+00   0.000e+00   4.638e-01
bicgstab:     2   1.908e+01   1.313e+01   1.725e-01   3.748e-01
bicgstab:     3   7.450e+00   2.021e-01  -4.102e+01  -3.019e-01
bicgstab:     4   7.450e+00   5.904e-03   1.437e-04  -2.701e-02
bicgstab:     5   2.771e+01   9.559e+02  -9.872e-01   7.661e-01
bicgstab:     6   2.824e+01   1.265e+00   6.517e+01   3.528e+00
bicgstab:     7   1.737e+01   4.366e-03   7.794e-02   5.908e+00
bicgstab:     8   1.554e+01  -1.002e+01  -1.157e+00   4.573e-01
bicgstab:     9   1.334e+01   1.536e+00  -1.319e+00   6.179e-01
bicgstab:    10   1.268e+01   1.574e-01  -5.404e-01   8.102e-01
bicgstab:    11   1.204e+01  -1.720e+00  -4.646e-01   1.684e+00
bicgstab:    12   7.704e+00   6.507e-01   6.179e+00   2.573e+00
bicgstab:    13   5.199e+00   2.123e+00   1.398e-01   5.458e-01
bicgstab:    14   9.518e+00   5.419e+00   2.631e+00   4.833e-01
bicgstab:    15   1.045e+00   1.114e+00  -3.050e+00   4.332e-01
bicgstab:    16   1.457e+00   3.456e-01  -9.730e-01   1.179e+01
bicgstab:    17   8.255e-01   1.041e-01  -5.648e-03   3.905e-01
bicgstab:    18   3.929e-01   1.285e+01  -6.873e-01   1.310e+01
bicgstab:    19   2.367e-01   1.141e+00   3.321e+00   8.539e-01
bicgstab:    20   9.119e-02   2.078e+00   4.199e-01   4.188e-01
bicgstab:    21   2.685e+01  -6.431e+02   7.199e-01   6.928e-01
bicgstab:    22   4.642e-02  -1.561e-03  -4.144e+05   1.288e+00
bicgstab:    23   3.587e-02   1.915e+00  -4.213e-06   1.585e+00
bicgstab:    24   3.298e-02  -1.042e+00  -1.464e-01   4.070e-01
bicgstab:    25   1.185e-02  -1.178e+00  -3.782e+00   8.900e+00
bicgstab:    26   8.248e-03   3.404e-01  -2.898e-01   1.548e+00
bicgstab:    27   7.334e-03   1.901e+00  -7.874e-02   7.831e-01
bicgstab:    28   4.360e-03   3.690e+00   1.589e+00   1.500e+00
bicgstab:    29   2.157e-03   1.750e+00   1.526e+00   3.504e-01
bicgstab:    30   1.622e-03   2.093e+00   1.077e+00   4.964e-01
bicgstab:    31   1.570e-03  -4.602e-01   1.015e-01   5.801e-01
bicgstab:    32   1.234e-03  -4.361e+00  -2.313e+00   1.627e+01
bicgstab:    33   5.013e-04   3.761e+00   1.634e+00   3.964e-01
bicgstab:    34   3.890e-04   9.143e-02  -3.060e+01   3.691e+00
bicgstab:    35   9.174e-05   1.239e+01  -1.797e-03   4.107e-01
bicgstab:    36   2.128e-05   3.164e-01   9.928e+00   4.888e-01
bicgstab:    37   4.549e-05   8.172e-01  -3.348e-01   1.093e+01
bicgstab:    38   3.337e-05   7.437e-01   4.745e-02   8.831e-01
bicgstab:    39   2.207e-05   8.366e-01   2.093e-01   1.375e+01
bicgstab:    40   2.369e-05   4.791e+00   9.240e-02   3.901e-01
bicgstab:    41   9.832e-06   1.804e-01  -5.704e+00   1.787e+00
bicgstab:    42   2.761e-04  -1.707e+02  -2.435e-01   4.675e-01
bicgstab:    43   1.648e-05   2.777e-02   5.802e+03   2.924e+00
bicgstab:    44   1.168e-05   5.173e-01   9.284e-04   1.041e+00
bicgstab:    45   1.461e-05   1.160e+01  -1.631e-01   4.372e-01
bicgstab:    46   8.500e-06  -1.678e+00   4.572e+01   4.372e-01
Newton: it=1 	 |F|=1.088736e-04
bare mass: mp=1 	 mm=1
bicgstab:  itmax 100, tol 1.088736e-07
bicgstab:     0   8.361e-03
bicgstab:     1   2.267e-02   1.772e+00   0.000e+00   4.781e-01
bicgstab:     2   4.892e-02   2.813e+00   1.958e-01   3.688e-01
bicgstab:     3   4.724e-02  -5.591e-01   1.944e-01   1.536e-01
bicgstab:     4   1.391e-01  -4.068e+00  -2.691e+00   4.621e-01
bicgstab:     5   2.073e-01   2.054e+00  -9.906e-01   1.458e-01
bicgstab:     6   2.214e-01   1.207e+00   3.528e-01   3.147e+00
bicgstab:     7   9.887e-02   9.003e-01   4.858e-01   1.469e+01
bicgstab:     8   7.240e-02   8.768e-01   4.164e-01   1.422e+00
bicgstab:     9   5.429e-02   2.283e+00   1.849e-01   9.703e-01
bicgstab:    10   5.241e-02   1.052e-01  -6.412e+00   2.972e+00
bicgstab:    11   4.766e-02  -2.870e-01  -1.784e-02   4.898e-01
bicgstab:    12   3.332e-02  -3.083e+00  -2.088e+00   5.904e+00
bicgstab:    13   4.573e-02  -5.106e+00  -8.138e-01   3.974e-01
bicgstab:    14   1.903e-02  -8.617e-02  -9.902e+01   1.308e+00
bicgstab:    15   8.806e-03   2.007e+00  -1.709e-02   4.429e-01
bicgstab:    16   4.078e-03   1.834e+00   5.315e-01   4.122e-01
bicgstab:    17   3.025e-03   2.359e-01  -1.641e+00   1.836e+01
bicgstab:    18   1.749e-03   1.046e+00  -5.314e-02   8.025e-01
bicgstab:    19   1.638e-03   2.520e-02   3.530e-03   3.178e+00
bicgstab:    20   1.910e-03  -2.801e+02  -9.689e-01   6.193e-01
bicgstab:    21   9.741e-04  -1.495e+00  -5.204e+02   6.528e-01
bicgstab:    22   1.143e-03   9.839e-01   3.885e-01   8.563e-01
bicgstab:    23   1.034e-03   2.207e-01  -3.631e-01   3.411e+00
bicgstab:    24   8.740e-04   6.660e+00  -2.308e-01   4.797e-01
bicgstab:    25   4.159e-04   4.101e+00   6.175e+00   1.199e+00
bicgstab:    26   7.250e-05   1.736e+00   2.541e+00   4.193e-01
bicgstab:    27   2.413e-04   1.289e+00   6.479e-01   8.214e+00
bicgstab:    28   1.923e-04  -7.167e-01   1.640e-01   4.055e-01
bicgstab:    29   1.067e-04  -8.648e-01  -4.438e+00   2.006e+01
bicgstab:    30   6.805e-05   7.452e-01  -1.036e-01   1.451e+00
bicgstab:    31   7.117e-05  -1.458e+00  -9.158e-02   4.050e-01
bicgstab:    32   5.238e-05  -8.440e+00  -4.491e+00   1.274e+00
bicgstab:    33   3.403e-05  -6.251e-01  -4.169e+00   5.956e-01
bicgstab:    34   5.660e-04   8.848e+00  -2.188e+00   4.257e+00
bicgstab:    35   1.482e-04  -6.343e-01   1.098e+01   4.251e-01
bicgstab:    36   1.127e-05   4.931e-01  -4.949e-01   1.126e+00
bicgstab:    37   8.272e-06   5.180e-01  -1.416e-02   3.160e+00
bicgstab:    38   8.852e-06  -1.252e+00   1.081e-01   5.978e-01
bicgstab:    39   8.494e-06   1.968e-02   1.269e-01   1.493e+00
bicgstab:    40   4.255e-07  -1.358e+02  -9.274e-01   4.845e-01
bicgstab:    41   1.275e-07   6.871e-01  -1.385e+01   1.206e+00
bicgstab:    42   2.215e-07   1.331e+00   1.059e-01   1.102e+00
bicgstab:    43   2.849e-07   2.943e+00   4.302e-01   4.107e-01
bicgstab:    44   8.943e-08   1.872e-01  -5.084e+00   2.519e+01
Newton: it=2 	 |F|=1.099610e-08
bare mass: mp=1 	 mm=1
bicgstab:  itmax 100, tol 1.099610e-11
bicgstab:     0   7.843e-07
bicgstab:     1   1.961e-06   1.674e+00   0.000e+00   4.833e-01
bicgstab:     2   2.658e-06   9.598e-01   2.154e-01   2.536e-01
bicgstab:     3   2.625e-06  -1.055e-02  -7.525e-03  -3.099e-01
bicgstab:     4   6.148e-04  -6.604e+04  -1.013e+00   5.137e-01
bicgstab:     5   2.396e-03  -5.504e-01  -6.722e+05   7.759e-01
bicgstab:     6   1.179e-04  -5.016e-02  -9.574e+00   1.498e+00
bicgstab:     7   2.121e-05  -1.835e+00  -2.737e-03   3.729e+00
bicgstab:     8   8.199e-05   1.339e+01  -3.734e-01   8.683e-01
bicgstab:     9   3.334e-06  -2.963e-01   5.799e+01   4.131e-01
bicgstab:    10   1.310e-06   4.479e-01  -4.082e-03   8.518e+00
bicgstab:    11   9.707e-07   1.083e-01   4.924e-02   9.716e-01
bicgstab:    12   7.939e-05   5.312e+02  -1.295e+00   4.204e-01
bicgstab:    13   9.989e-07  -3.956e-03   1.356e+05   8.914e+00
bicgstab:    14   9.566e-07  -3.468e-01  -2.081e-06   6.836e-01
bicgstab:    15   6.018e-07  -2.287e+00  -2.619e+00   4.102e+00
bicgstab:    16   5.111e-07   5.524e-01  -2.101e-01   5.383e-01
bicgstab:    17   4.548e-07   3.796e-01  -7.928e-02   6.210e+00
bicgstab:    18   4.873e-07  -2.832e+00  -5.217e-01   4.053e-01
bicgstab:    19   6.911e-07  -2.759e+01  -6.902e+00   2.445e+00
bicgstab:    20   8.241e-08   2.513e-01   8.070e+01   7.419e-01
bicgstab:    21   5.984e-08   5.121e-01   5.141e-03   8.583e+00
bicgstab:    22   1.536e-06   1.798e+02  -1.036e-01   4.283e-01
bicgstab:    23   1.428e-06   2.145e-01   9.248e+02   4.504e-01
bicgstab:    24   1.246e-08   1.283e-01  -3.063e+00   1.440e+00
bicgstab:    25   1.066e-08  -2.436e-01  -1.665e-04   4.487e-01
bicgstab:    26   1.196e-08  -9.972e+00  -1.729e+00   6.119e+00
bicgstab:    27   1.369e-08   8.130e-01  -3.136e+00   1.198e+00
bicgstab:    28   1.437e-08  -1.823e+00  -1.162e-02   1.032e+00
bicgstab:    29   8.708e-09  -9.593e-01  -7.730e+00   5.049e+00
bicgstab:    30   1.190e-08  -1.128e+00  -9.169e-01   4.070e-01
bicgstab:    31   9.888e-09  -4.393e-01  -2.336e-01   4.161e+00
bicgstab:    32   1.707e-09   8.761e+00  -2.123e+00   5.496e-01
bicgstab:    33   1.700e-09   4.641e-01  -3.252e+00   1.184e+01
bicgstab:    34   1.103e-09   1.220e+00   7.329e-03   5.322e-01
bicgstab:    35   7.006e-10   3.349e+00   1.693e+00   6.644e-01
bicgstab:    36   5.996e-10   3.891e-01  -2.397e+00   5.402e+00
bicgstab:    37   6.749e-10  -3.917e+00  -1.212e-01   4.064e-01
bicgstab:    38   4.786e-08  -1.447e+02  -8.245e+00   9.523e-01
bicgstab:    39   8.426e-09  -1.557e-01  -1.103e+03   4.699e+00
bicgstab:    40   1.067e-08  -2.960e+00  -2.019e-02   4.757e-01
bicgstab:    41   1.615e-08   1.223e+00   3.585e+00   4.735e-01
bicgstab:    42   1.483e-10   7.049e-02  -1.116e+01   7.565e-01
bicgstab:    43   2.384e-10   7.352e-01   7.858e-04   4.783e+00
bicgstab:    44   6.386e-10   2.423e+01  -1.392e-01   5.117e-01
bicgstab:    45   5.218e-10  -1.148e-02  -2.464e+00   1.156e+00
bicgstab:    46   4.183e-11  -7.219e+00  -1.042e+00   9.687e+00
bicgstab:    47   2.655e-11   1.965e+00   7.544e-02   4.382e-01
bicgstab:    48   1.064e-11   2.729e+00   1.014e+00   4.382e-01
Newton: it=3 	 |F|=9.324692e-12 
INFO (TwoPunctures): The two puncture masses are mp=1 and mm=1
INFO (TwoPunctures): Puncture 1 ADM mass is 1.12523
INFO (TwoPunctures): Puncture 2 ADM mass is 1.09661
INFO (TwoPunctures): The total ADM mass is 2.22433
INFO (TwoPunctures): Interpolating result
INFO (TimerReport): Timer Report at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   7607.46 7607.46 7607.46   CCTK total time
100.0   7607.45 7607.45 7607.45   meta mode/meta mode/global mode
100.0   7607.45 7607.45 7607.45   main/Initialise/CallInitial
100.0   7607.45 7607.45 7607.45   meta mode/meta mode/global mode/level(0)
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
100.0   7607.26 7607.26 7607.26   [0067] TwoPunctures: TwoPunctures in CCTK_INITIAL
100.0   7607.26 7607.26 7607.26   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
  0.0      0.11    0.11    0.11   main/Initialise/CallInitial/CCTK_POSTINITIAL
  0.0      0.11    0.11    0.11   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction
  0.0      0.10    0.10    0.10   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction/thorns
  0.0      0.10    0.10    0.10   [0001] CycleClock: CycleClock_Setup in CCTK_STARTUP
  0.0      0.05    0.05    0.05   main/Initialise/CallInitial/Poison
  0.0      0.04    0.04    0.04   [0096] ML_BSSN: ML_BSSN_ConstraintsInterior in CCTK_POSTINITIAL
  0.0      0.04    0.04    0.04   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction/thorns/ML_BSSN_ConstraintsInterior
  0.0      0.03    0.03    0.03   [0092] ADMConstraints: ADMConstraints in CCTK_POSTINITIAL
  0.0      0.03    0.03    0.03   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction/thorns/ADMConstraints
  0.0      0.02    0.02    0.02   [0076] ML_BSSN: ML_BSSN_InitialADMBase1Everywhere in CCTK_INITIAL
  0.0      0.02    0.02    0.02   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/ML_BSSN_InitialADMBase1Everywhere
======================================================================
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Iteration      Time | ADMBASE::gxx | ADMBASE::gxy | ADMBASE::gxz | ADMBASE::gyy | ADMBASE::gyz | ADMBASE::gzz | ADMBASE::kxx | ADMBASE::kxy | ADMBASE::kxz | ADMBASE::kyy | ADMBASE::kyz | ADMBASE::kzz | ADMBASE::alp | *BASE::betax | *BASE::betay | *BASE::betaz | *RAINTS::ham | *AINTS::momx | *AINTS::momy | *AINTS::momz | *me_per_hour
                    |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |        norm2 |             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        0     0.000 |   11.1646287 |    0.0000000 |    0.0000000 |   11.1646287 |    0.0000000 |   11.1646287 |    0.0155209 |    0.4767083 |    0.4767083 |    0.0077686 |    0.0077375 |    0.0077686 |    1.0000000 |    0.0000000 |    0.0000000 |    0.0000000 | 6.183336e-10 | 2.611346e-12 | 1.206512e-12 | 1.206513e-12 |    0.0000000
INFO (TimerReport): Timer Report before terminating at iteration 0 time 0
INFO (TimerReport): Top timers at iteration 0 time 0
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   7607.56 7607.56 7607.56   CCTK total time
100.0   7607.56 7607.56 7607.56   main/Initialise
100.0   7607.55 7607.55 7607.55   meta mode/meta mode/global mode
100.0   7607.54 7607.54 7607.54   meta mode/meta mode/global mode/level(0)
100.0   7607.45 7607.45 7607.45   main/Initialise/CallInitial
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction
100.0   7607.30 7607.30 7607.30   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns
100.0   7607.26 7607.26 7607.26   [0067] TwoPunctures: TwoPunctures in CCTK_INITIAL
100.0   7607.26 7607.26 7607.26   main/Initialise/CallInitial/CCTK_INITIAL/CallFunction/thorns/TwoPunctures
  0.0      0.11    0.11    0.11   main/Initialise/CallInitial/CCTK_POSTINITIAL
  0.0      0.11    0.11    0.11   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction
  0.0      0.10    0.10    0.10   main/Initialise/CallInitial/CCTK_POSTINITIAL/CallFunction/thorns
  0.0      0.10    0.10    0.10   [0001] CycleClock: CycleClock_Setup in CCTK_STARTUP
  0.0      0.10    0.10    0.10   main/Initialise/CallAnalysis
  0.0      0.09    0.09    0.09   main/Initialise/CallAnalysis/OutputGH
  0.0      0.09    0.09    0.09   main/Initialise/CallAnalysis/OutputGH/OutputGH
  0.0      0.08    0.08    0.08   main/Initialise/CallAnalysis/OutputGH/OutputGH/IOScalar::CarpetIOScalar [1]
  0.0      0.08    0.08    0.08   main/Initialise/CallAnalysis/OutputGH/OutputGH/IOScalar::CarpetIOScalar [1]/OutputGH
  0.0      0.05    0.05    0.05   main/Initialise/CallInitial/Poison
======================================================================
--------------------------------------------------------------------------------
Done.
